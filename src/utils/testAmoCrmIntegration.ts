// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AmoCRM
import { submitLoanApplication } from './amoCrmIntegration';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
const testApplicationData = {
  // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  phone: '+7 (900) 123-45-67',
  email: 'test@example.com',
  
  // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  firstName: '–ò–≤–∞–Ω',
  lastName: '–ü–µ—Ç—Ä–æ–≤',
  middleName: '–°–µ—Ä–≥–µ–µ–≤–∏—á',
  birthDate: '1990-01-15',
  
  // –ó–∞–π–º
  loanAmount: 50000,
  loanDays: 30,
  
  // –ê–¥—Ä–µ—Å
  registrationAddress: {
    region: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
    city: '–ú–æ—Å–∫–≤–∞',
    street: '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è',
    house: '1',
    apartment: '10'
  },
  
  // –î–æ—Ö–æ–¥—ã
  monthlyIncome: '80000',
  employmentType: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
  
  // –î–æ–∫—É–º–µ–Ω—Ç—ã (mock –¥–∞–Ω–Ω—ã–µ)
  documents: {
    passport: new File(['mock passport data'], 'passport.jpg', { type: 'image/jpeg' }),
    income: new File(['mock income data'], 'income.pdf', { type: 'application/pdf' })
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
export const testAmoCrmConnection = async () => {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AmoCRM...');
  
  try {
    const result = await submitLoanApplication(testApplicationData);
    
    if (result.success) {
      console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log('üìã ID –∑–∞—è–≤–∫–∏:', result.leadId);
      
      return {
        success: true,
        message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ AmoCRM',
        leadId: result.leadId
      };
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', result.error);
      
      return {
        success: false,
        message: result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      };
    }
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    
    return {
      success: false,
      message: error instanceof Error ? error.message : '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞'
    };
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
export const checkAmoCrmConfig = () => {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é AmoCRM:');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
  const hasApiKey = process.env.AMOCRM_ACCESS_TOKEN || '7ae2fd98c40922fd54b3a9f4f67a6d08';
  console.log('üîë API –∫–ª—é—á:', hasApiKey ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π URL
  const baseUrl = 'https://micro5mfo.amocrm.ru';
  console.log('üåê Base URL:', baseUrl);
  
  return {
    hasApiKey: !!hasApiKey,
    baseUrl: baseUrl,
    isConfigured: !!hasApiKey
  };
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
if (process.env.NODE_ENV === 'development') {
  console.log('üîç Dev —Ä–µ–∂–∏–º: –∑–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
  checkAmoCrmConfig();
}